name: Benchmarks

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  workflow_dispatch:

jobs:
  compare:
    name: Compare Benchmarks
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/foonathan/gcc:12

    steps:
      # checkout pr
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          path: pr

      # checkout main
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Setup
        run: |
          mkdir pr/build main/build
          echo "Setup complete"

      - name: Reference
        working-directory: main
        run: |
          set -e
          cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          cd build/samples/LiborSwaptionPricer
          ls -l
          file ./LiborSwaptionPricer
          chmod +x ./LiborSwaptionPricer
          rm -f reference.log || true
          # warmup run
          ./LiborSwaptionPricer 50000
          for i in $(seq 1 ${{ vars.REPETITIONS }}) ; do \
            ./LiborSwaptionPricer 50000 | tee -a reference.log ; \
          done

      - name: Benchmark
        working-directory: pr
        run: |
          set -e
          cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          cd build/samples/LiborSwaptionPricer
          rm -f output.log || true
          # warmup run
          ./LiborSwaptionPricer 50000
          for i in $(seq 1 ${{ vars.REPETITIONS }}) ; do \
            ./LiborSwaptionPricer 50000 | tee -a output.log ; \
          done

      - name: Compare
        run: |
          set -e
          apt-get update && apt-get install -y bc datamash
          echo "Min   Max   Mean  StdDev  Median  TrimMean  GeoMean  HarmMean"

          echo "*Output*"
          awk '$2 == "AAD" { print $4  }' pr/build/samples/LiborSwaptionPricer/output.log | \
          datamash min 1 max 1 mean 1 sstdev 1 median 1 trimmean 1 geomean 1 harmmean 1
          OUT_TIME=$(awk '$2 == "AAD" { print $4  }' pr/build/samples/LiborSwaptionPricer/output.log | \
          datamash median 1)

          echo "*Reference*"
          awk '$2 == "AAD" { print $4  }' main/build/samples/LiborSwaptionPricer/reference.log | \
          datamash min 1 max 1 mean 1 sstdev 1 median 1 trimmean 1 geomean 1 harmmean 1
          REF_TIME=$(awk '$2 == "AAD" { print $4  }' main/build/samples/LiborSwaptionPricer/reference.log | \
          datamash median 1)

          DIFFERENCE=$(echo "scale=9; $REF_TIME - $OUT_TIME" | bc | awk '{printf "%.3f\n", $1}')
          PERCENTAGE=$(echo "scale=9; (($REF_TIME - $OUT_TIME) / $REF_TIME) * 100.0" | bc | awk '{printf "%.3f\n", $1}')
          echo "Difference: $DIFFERENCE"
          echo "Percentage: $PERCENTAGE"

          echo "result=| ${REF_TIME}s | ${OUT_TIME}s | ${PERCENTAGE}% |" >> "$GITHUB_OUTPUT"