name: Benchmarks

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  workflow_dispatch:

jobs:
  compare:
    name: Compare Benchmarks
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/foonathan/gcc:12

    steps:
      # checkout pr
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          path: pr

      # checkout main
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Setup
        run: |
          mkdir pr/build main/build
          echo "Setup complete"

      - name: Reference
        working-directory: main
        run: |
          set -e
          cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          cd build/samples/LiborSwaptionPricer
          ls -l
          file ./LiborSwaptionPricer
          chmod +x ./LiborSwaptionPricer
          rm -f reference.log || true
          # warmup run
          ./LiborSwaptionPricer 50000
          for i in $(seq 1 ${{ vars.REPETITIONS }}) ; do \
            ./LiborSwaptionPricer 50000 | tee -a reference.log ; \
          done

      - name: Benchmark
        working-directory: pr
        run: |
          set -e
          cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          cd build/samples/LiborSwaptionPricer
          rm -f benchmark.log || true
          # warmup run
          ./LiborSwaptionPricer 50000
          for i in $(seq 1 ${{ vars.REPETITIONS }}) ; do \
            ./LiborSwaptionPricer 50000 | tee -a benchmark.log ; \
          done

      - name: Compare
        id: compare
        run: |
          set -e
          apt-get update && apt-get install -y bc datamash --fix-missing
          
          OUTPUT_RESULTS=$(awk '$2 == "AAD" { print $4  }' pr/build/samples/LiborSwaptionPricer/benchmark.log | \
          datamash min 1 max 1 mean 1 sstdev 1 median 1 trimmean 1 geomean 1 harmmean 1)
          OUT_TIME=$(awk '$2 == "AAD" { print $4  }' pr/build/samples/LiborSwaptionPricer/benchmark.log | \
          datamash median 1)
          
          REFERENCE_RESULTS=$(awk '$2 == "AAD" { print $4  }' main/build/samples/LiborSwaptionPricer/reference.log | \
          datamash min 1 max 1 mean 1 sstdev 1 median 1 trimmean 1 geomean 1 harmmean 1)
          REF_TIME=$(awk '$2 == "AAD" { print $4  }' main/build/samples/LiborSwaptionPricer/reference.log | \
          datamash median 1)
      
          # Write the results to a markdown file
          echo "### Benchmark Comparison" > benchmark_results.md
          echo "" >> benchmark_results.md
          echo "**Output Results:**" >> benchmark_results.md
          echo "$OUTPUT_RESULTS" >> benchmark_results.md
          echo "" >> benchmark_results.md
          echo "**Output Time:**" >> benchmark_results.md
          echo "$OUT_TIME" >> benchmark_results.md
          echo "" >> benchmark_results.md
          echo "**Reference Results:**" >> benchmark_results.md
          echo "$REFERENCE_RESULTS" >> benchmark_results.md
          echo "" >> benchmark_results.md
          echo "**Reference Time:**" >> benchmark_results.md
          echo "$REF_TIME" >> benchmark_results.md
      
          echo "RESULTS_FILE=$(pwd)/benchmark_results.md" >> $GITHUB_ENV
      
      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            $(cat $RESULTS_FILE)
        env:
          RESULTS_FILE: ${{ env.RESULTS_FILE }}